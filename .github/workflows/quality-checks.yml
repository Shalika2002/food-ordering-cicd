name: Quality Assurance Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Security audit backend
      working-directory: ./backend
      run: npm audit --audit-level=moderate || true
      continue-on-error: true

    - name: Security audit frontend
      working-directory: ./frontend
      run: npm audit --audit-level=moderate || true
      continue-on-error: true

    - name: Check outdated dependencies
      run: |
        echo "Backend dependencies:"
        cd backend && npm outdated || echo "Dependencies checked"
        echo "Frontend dependencies:"
        cd ../frontend && npm outdated || echo "Dependencies checked"

  test-validation:
    name: Test Structure Validation
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Validate test structure
      working-directory: ./backend
      run: |
        echo "Validating test structure..."
        
        # Check if test directories exist
        if [ -d "tests/unit" ]; then echo "Unit tests directory exists"; else echo "Unit tests directory missing"; fi
        if [ -d "tests/api" ]; then echo "API tests directory exists"; else echo "API tests directory missing"; fi
        if [ -d "tests/ui" ]; then echo "UI tests directory exists"; else echo "UI tests directory missing"; fi
        if [ -d "features" ]; then echo "BDD tests directory exists"; else echo "BDD tests directory missing"; fi
        
        # Count test files
        unit_tests=$(find tests/unit -name "*.test.js" 2>/dev/null | wc -l)
        api_tests=$(find tests/api -name "*.test.js" 2>/dev/null | wc -l)
        ui_tests=$(find tests/ui -name "*.test.js" 2>/dev/null | wc -l)
        
        echo "Test file counts:"
        echo "   Unit tests: $unit_tests"
        echo "   API tests: $api_tests" 
        echo "   UI tests: $ui_tests"

    - name: Test configuration validation
      working-directory: ./backend
      run: |
        echo "Validating test configuration..."
        
        # Check if test files have valid syntax
        for file in tests/**/*.test.js; do
          if [ -f "$file" ]; then
            node -c "$file" && echo "$file syntax OK" || echo "$file syntax error"
          fi
        done
        
        # Check essential files
        if [ -f "tests/setup.js" ]; then echo "Test setup file exists"; else echo "Test setup file missing"; fi
        if [ -f "jest.config.js" ]; then echo "Jest config exists"; else echo "Jest config missing"; fi